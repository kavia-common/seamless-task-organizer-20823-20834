{"is_source_file": true, "format": "TypeScript", "description": "This file contains API utility functions for managing tasks, including fetching, creating, updating, deleting, completing, and uncompleting tasks. It also defines the Task type and a helper for API requests.", "external_files": ["fetch"], "external_methods": ["fetch"], "published": ["getApiBaseUrl", "listTasks", "createTask", "updateTask", "deleteTask", "completeTask", "uncompleteTask"], "classes": [], "methods": [{"name": "export function getApiBaseUrl(): string { getApiBaseUrl", "description": "Returns the API base URL from environment variables or a default fallback.", "scope": "", "scopeKind": ""}, {"name": "async function request<T>( request", "description": "A helper function to perform fetch requests with standardized headers and error handling.", "scope": "", "scopeKind": ""}, {"name": "async function safeJson(res: Response) { safeJson", "description": "Safely parse JSON responses, returning null if parsing fails.", "scope": "", "scopeKind": ""}, {"name": "export async function listTasks(q?: string): Promise<Task[]> { listTasks", "description": "Fetches a list of tasks, optionally filtered by a search query.", "scope": "", "scopeKind": ""}, {"name": "export async function createTask(payload: { createTask", "description": "Creates a new task with provided title and optional description.", "scope": "", "scopeKind": ""}, {"name": "export async function updateTask( updateTask", "description": "Updates specified fields of a task identified by id.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteTask(id: number): Promise<{ success: boolean }> { deleteTask", "description": "Deletes the task with the given id.", "scope": "", "scopeKind": ""}, {"name": "export async function completeTask(id: number): Promise<Task> { completeTask", "description": "Marks the specified task as complete.", "scope": "", "scopeKind": ""}, {"name": "export async function uncompleteTask(id: number): Promise<Task> { uncompleteTask", "description": "Marks the specified task as not complete.", "scope": "", "scopeKind": ""}], "calls": ["getApiBaseUrl", "request", "safeJson", "listTasks", "createTask", "updateTask", "deleteTask", "completeTask", "uncompleteTask"], "search-terms": ["Task API functions", "API request helpers", "task CRUD operations", "task completion toggling", "TypeScript task type"], "state": 2, "file_id": 12, "knowledge_revision": 39, "git_revision": "", "revision_history": [{"27": ""}, {"38": ""}, {"39": ""}], "ctags": [{"_type": "tag", "name": "Task", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export type Task = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^  const base = process.env.NEXT_PUBLIC_API_BASE_URL;$/", "language": "TypeScript", "kind": "constant", "scope": "getApiBaseUrl", "scopeKind": "function"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^      const body = await safeJson(res);$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "completeTask", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function completeTask(id: number): Promise<Task> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createTask", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function createTask(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteTask", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function deleteTask(id: number): Promise<{ success: boolean }> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getApiBaseUrl", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export function getApiBaseUrl(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^  const headers: HeadersInit = {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "hint", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^    const hint = `Failed to fetch ${url}. Ensure NEXT_PUBLIC_API_BASE_URL points to your backend/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "listTasks", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function listTasks(q?: string): Promise<Task[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^      const message =$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "originalMessage", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^    const originalMessage =$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "qs", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^  const qs = q ? `?q=${encodeURIComponent(q)}` : \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "listTasks", "scopeKind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^    const res = await fetch(url, { ...options, headers, cache: \"no-store\" });$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "safeJson", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^async function safeJson(res: Response) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "uncompleteTask", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function uncompleteTask(id: number): Promise<Task> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "updateTask", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^export async function updateTask($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/seamless-task-organizer-20823-20834/to_do_frontend/src/lib/api.ts", "pattern": "/^  const url = `${getApiBaseUrl()}${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "ff9f5df7b471bff93b060d0d20d8e9e4", "format-version": 4, "code-base-name": "to_do_frontend", "filename": "to_do_frontend/src/lib/api.ts"}